name: Build + Deploy

on:
  workflow_dispatch:
    inputs:
      git-commit:
        description: Git commit SHA (Optional)
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository (Latest)
        uses: actions/checkout@v5
        if: github.event.inputs.git-commit == ''
      - name: Clone repository (Custom commit)
        uses: actions/checkout@v5
        if: github.event.inputs.git-commit != ''
        with:
          ref: ${{ github.event.inputs.git-commit }}
      - name: Install node
        uses: actions/setup-node@v6
        with:
          node-version-file: '.nvmrc'
      - name: npm install
        run: npm install
      - name: npm build
        run: npm run build
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: sam-simple-site-out
          path: out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v5
        with:
          name: sam-simple-site-out
          path: out
      - name: Upload files to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'out'

  invalidate:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Invalidate CloudFront Distro
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DISTRIBUTION_ID }}
          PATHS: "/*"
          AWS_REGION: "us-east-1"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Clone repository (Latest)
        uses: actions/checkout@v5
        if: github.event.inputs.git-commit == ''
      - name: Clone repository (Custom commit)
        uses: actions/checkout@v5
        if: github.event.inputs.git-commit != ''
        with:
          ref: ${{ github.event.inputs.git-commit }}
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform fmt
        run: terraform fmt -check
        working-directory: infrastructure
        continue-on-error: false
      - name: Terraform Init
        run: terraform init
        working-directory: infrastructure
      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: infrastructure
        continue-on-error: false
      - name: Terraform Plan
        run: terraform plan -var='cdn_viewer_cert_arn=${{secrets.CDN_VIEWER_CERT_ARN}}' -out plan.tf
        working-directory: infrastructure
        continue-on-error: false
